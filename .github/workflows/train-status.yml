name: Train Status (RTT)

on:
  schedule:
    - cron: "*/5 5-6 * * 1-5"   # weekdays, UTC: 05:00–06:59 (≈06:00–07:59 BST)
  workflow_dispatch:
    inputs:
      force:
        description: "Bypass time gate (run now)"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    env:
      ORIGIN_CRS: "STE"
      DEST_CRS: "WIM"
      BOOKED_DEPART_HHMM: "0744"
      LONDON_TZ: "Europe/London"
      CUTOVER_LOCAL_TIME: "09:00"
      START_LOCAL_TIME: "06:30"
      END_LOCAL_TIME: "08:00"
      WINDOW_START: "0725"
      WINDOW_END: "0845"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Soft gate: decide whether to run, don't fail the job
      - name: Time gate (Europe/London window or force)
        id: timegate
        env:
          START: ${{ env.START_LOCAL_TIME }}
          END: ${{ env.END_LOCAL_TIME }}
          LONDON_TZ: ${{ env.LONDON_TZ }}
          FORCE: ${{ github.event.inputs.force }}
        run: |
          if [ "${FORCE}" = "true" ]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          node - <<'NODE'
          const tz = process.env.LONDON_TZ || 'Europe/London';
          const start = process.env.START || '06:30';
          const end   = process.env.END   || '08:00';
          const fmt = new Intl.DateTimeFormat('en-GB',{ timeZone: tz, hour: '2-digit', minute: '2-digit', hour12: false });
          const hm = fmt.format(new Date());
          const toM = s => parseInt(s.slice(0,2))*60 + parseInt(s.slice(3,5));
          const cur = toM(hm), sM = toM(start), eM = toM(end);
          const ok = cur >= sM && cur <= eM;
          console.log('Local time:', hm, 'window', start, '-', end, '->', ok);
          require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `run=${ok}\n`);
          NODE

      - name: Build JSON (fetch RTT + xfer)
        if: steps.timegate.outputs.run == 'true'
        env:
          RTT_USERNAME: ${{ secrets.RTT_USERNAME }}
          RTT_PASSWORD: ${{ secrets.RTT_PASSWORD }}
          # Scripts also read these from job env (CUTOVER_LOCAL_TIME, WINDOW_* etc.)
        run: |
          node scripts/fetch_rtt.js
          node scripts/xfer_plan.js

      - name: Commit board JSON
        if: steps.timegate.outputs.run == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add status.json xfer.json history.jsonl || true
          git commit -m "Update board snapshots" || echo "No changes"
          git push

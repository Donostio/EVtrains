<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>07:44 Streatham → Wimbledon</title>
  <style>
    body { font: 16px/1.45 system-ui, -apple-system, Segoe UI, Roboto, sans-serif; margin: 24px; background:#fafafa; }
    .card { border: 1px solid #ddd; border-radius: 12px; padding: 16px; max-width: 700px; background:#fff; box-shadow:0 1px 4px rgba(0,0,0,0.05);}
    .row { display: grid; grid-template-columns: 160px 1fr; gap: 10px; margin: 6px 0; }
    .badge { display: inline-block; padding: 2px 8px; border-radius: 999px; font-weight: 600; text-transform: capitalize; }
    .on_time { background:#e8f5e9; color:#1b5e20; }
    .delayed { background:#fff8e1; color:#f57f17; }
    .early { background:#e3f2fd; color:#1565c0; }
    .cancelled { background:#ffebee; color:#b71c1c; }
    code { background: #f6f8fa; padding: 2px 4px; border-radius: 4px; }
  </style>
</head>
<body>
  <h1>07:44 Streatham → Wimbledon (Weekdays)</h1>
  <div id="app" class="card">Loading…</div>

  <script>
    const fmt = hhmm => hhmm ? hhmm.slice(0,2)+":"+hhmm.slice(2) : "—";
    const toMins = hhmm => hhmm ? parseInt(hhmm.slice(0,2))*60 + parseInt(hhmm.slice(2)) : null;

    function timeMarkup(booked, real) {
      if(!booked && !real) return "—";
      if(!real || real === booked) return `<b>${fmt(booked)}</b>`;
      const diff = toMins(real) - toMins(booked);
      const color = diff > 0 ? "#c00" : diff < 0 ? "#080" : "#000";
      return `<b style="color:${color}">${fmt(real)}</b> <span style="color:#666;">(${fmt(booked)})</span>`;
    }

    async function load() {
      const el = document.getElementById('app');
      try {
        const res = await fetch('./status.json', { cache: 'no-store' });
        if(!res.ok) throw new Error("status.json not found");
        const s = await res.json();
        if(s.error){ el.innerHTML = `<p>⚠️ Error: ${s.error}</p>`; return; }

        const o = s.origin || {};
        const d = s.destination || {};
        const status = s.status || "unknown";

        const depTime = timeMarkup(o.bookedDeparture || s.gbttBookedDeparture, o.realtimeDeparture);
        const arrTime = timeMarkup(d.bookedArrival, d.realtimeArrival);
        const depPlat = o.platform || "—";
        const arrPlat = d.platform || "—";

        const delayStr = (mins) => mins==null ? "—" : (mins===0? "On time" : (mins>0? `+${mins} min` : `${mins} min`));

        el.innerHTML = `
          <div class="row"><div>Snapshot:</div><div>${new Date(s.generatedAt).toLocaleString()}</div></div>
          <div class="row"><div>Status:</div><div><span class="badge ${status}">${status.replace('_',' ')}</span></div></div>
          <div class="row"><div>Origin (STE) dep:</div><div>${depTime} · Plat <b>${depPlat}</b> · ${delayStr(o.departureDelayMins)}</div></div>
          <div class="row"><div>Destination (WIM) arr:</div><div>${arrTime} · Plat <b>${arrPlat}</b> · ${delayStr(d.arrivalDelayMins)}</div></div>
          <div class="row"><div>Service UID:</div><div><code>${s.serviceUid || '—'}</code> (run ${s.runDate || '—'})</div></div>
          <div class="row"><div>Data:</div><div><a href="${s.searchUrl}" target="_blank">search</a> · <a href="${s.detailUrl}" target="_blank">service</a></div></div>
        `;
      } catch (e) {
        el.innerHTML = `<p>⚠️ ${e.message}</p>`;
      }
    }
    load();
  </script>
</body>
</html>
